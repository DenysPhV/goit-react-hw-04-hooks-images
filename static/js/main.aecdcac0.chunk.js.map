{"version":3,"sources":["components/Modal/Modal.module.scss","components/App.module.scss","components/ImageGallery/ImageGalleryItem.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Button/Button.module.scss","components/Searchbar/Searchbar.module.scss","components/services/getImagesApi.js","components/Searchbar/SearchBar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["module","exports","fetchData","a","searchQuery","currentPage","perPage","axios","get","response","data","hits","getImagesApi","Searchbar","onSubmit","useState","query","setQuery","className","s","e","preventDefault","trim","toast","error","SearchForm","type","SearchForm__button","SearchForm__button__label","autoComplete","autoFocus","placeholder","value","onChange","target","SearchForm__input","ImageGalleryItem","id","webformatURL","largeImageURL","tags","src","alt","ImageGalleryItem__image","ImageGallery","images","onClick","map","Button","onLoadMore","modalRoot","document","querySelector","Modal","onClose","children","setLargeUrl","handleKeydown","code","useEffect","window","addEventListener","createPortal","Overlay","currentTarget","App","setImages","setCurrentPage","setPerPage","showModal","setShowModal","setSearchQuery","isLoading","setIsLoading","largeUrl","fetchImages","options","prevState","console","log","length","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","renderLoadMoreButton","nodeName","dataset","url","color","height","width","radius","prevPage","theme","transition","Flip","draggableDirection","onLoad","ReactDom","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aecdcac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__31qJY\",\"Modal\":\"Modal_Modal__EHi_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3hXuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__3Ftxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1sIgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__5aB9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__vgYCz\",\"SearchForm\":\"Searchbar_SearchForm__1FoZt\",\"SearchForm__button\":\"Searchbar_SearchForm__button__3ktsy\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__1eCCv\",\"SearchForm__input\":\"Searchbar_SearchForm__input__16NVl\"};","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst MY_KEY = '22979201-d3b88ee555cfd640fb3d2f529';\n\nconst fetchData = async ({\n  searchQuery = '',\n  currentPage = 1,\n  perPage = 12,\n}) => {\n  const response = await axios.get(\n    `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${MY_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n  );\n  return response.data.hits;\n};\n\nconst getImagesApi = { fetchData };\nexport default getImagesApi;\n","// import { Component } from 'react';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.scss';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n\n    if (query.trim() === '') {\n      // alert('Ты ничего не ввел');\n      toast.error('Please enter at least one letter !');\n      return;\n    }\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchForm__button}>\n          <span className={s.SearchForm__button__label}>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n          className={s.SearchForm__input}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// export default class Searchbar extends Component {\n//   state = {\n//     query: '',\n//   };\n\n//   handleChange = (e) => {\n//     this.setState({ query: e.target.value });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     this.props.onSubmit(this.state.query);\n//     this.setState({ query: '' });\n\n//     if (this.state.query.trim() === '') {\n//       // alert('Ты ничего не ввел');\n//       toast.error('Please enter at least one letter !');\n//       return;\n//     }\n//   };\n\n//   render() {\n//     const { query } = this.state;\n//     return (\n//       <header className={s.Searchbar}>\n//         <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n//           <button type=\"submit\" className={s.SearchForm__button}>\n//             <span className={s.SearchForm__button__label}>Search</span>\n//           </button>\n\n//           <input\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={query}\n//             onChange={this.handleChange}\n//             className={s.SearchForm__input}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.scss';\n\nconst ImageGalleryItem = ({ id, webformatURL, largeImageURL, tags }) => (\n  <li key={id}>\n    <img\n      src={webformatURL}\n      alt={tags}\n      data-url={largeImageURL}\n      className={s.ImageGalleryItem__image}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  webformatURL: PropTypes.string,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem';\nimport s from './ImageGallery.module.scss';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className={s.ImageGallery} onClick={onClick}>\n    {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n        tags={tags}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nconst Button = ({ onLoadMore }) => (\n  <button onClick={onLoadMore} type=\"button\" className={s.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\n\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children, setLargeUrl }) {\n  const handleKeydown = (e) => {\n    if (e.code === 'Escape') {\n      onClose();\n      setLargeUrl('');\n    }\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n      setLargeUrl('');\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n  });\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, Flip } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport s from './App.module.scss';\n\nimport getImagesApi from './services/getImagesApi';\n\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Button from './Button';\nimport Modal from './Modal';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [largeUrl, setLargeUrl] = useState('');\n\n  const onChangeQuery = (query) => {\n    setImages([]);\n    setCurrentPage(1);\n    setSearchQuery(query);\n  };\n\n  useEffect(() => {\n    setPerPage(12);\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchImages = async () => {\n      const options = { searchQuery, currentPage, perPage };\n\n      setIsLoading(true);\n\n      try {\n        const response = await getImagesApi.fetchData(options);\n        setImages((prevState) => [...prevState, ...response]);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchImages();\n  }, [searchQuery, currentPage, perPage]);\n\n  useEffect(() => {\n    setPerPage(12);\n\n    if (images.length > perPage) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [images, perPage]);\n\n  const nextPage = () => setCurrentPage((prevPage) => prevPage + 1);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onImageClick = (e) => {\n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n    setIsLoading(true);\n    setLargeUrl(e.target.dataset.url);\n\n    toggleModal();\n  };\n\n  const toggleLoader = () => {\n    setIsLoading(false);\n  };\n\n  const renderLoadMoreButton = images.length > 0 && !isLoading;\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={onChangeQuery} />\n\n      <ImageGallery images={images} onClick={onImageClick} />\n      {isLoading && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          radius={50}\n        />\n      )}\n      {renderLoadMoreButton && <Button onLoadMore={nextPage} />}\n      <ToastContainer theme=\"dark\" transition={Flip} draggableDirection=\"y\" />\n\n      {showModal && (\n        <Modal onClose={toggleModal} setLargeUrl={setLargeUrl}>\n          <img src={largeUrl} alt=\"\" onLoad={toggleLoader} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","import ReactDom from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport React from 'react';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}